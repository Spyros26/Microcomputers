;Because of the two interrupts caused by the push and let-go of the INTRPT
;button, the interrupt routine is executed twice for every interrupt.
;Thus, for each interrupt the program can check two numbers.

	ORG 0800H
	IN 10H
START:	
	LXI H,0A00H		;load HL with the start of the memory 
	MVI M,10H		;I will store the output byte
	INX H			;10H means print nothing
	MVI M,10H		
	INX H			
	MVI M,10H			
	INX H			;0A00H to 0A03 to have code 10H, to 
	MVI M,10H		;print nothing.

	MVI A,0DH		;enable interrupts
	SIM			;in RST 6.5
	EI
	
WAIT:
	JMP WAIT

;INTERRUPT HANDLER ROUTINE
INTR_ROUTINE:
	POP H
	CALL KIND		;reads keybord input
	MOV B,A		;most significant hex digit
	LXI H,0A05H
	MOV M,B		

	CALL KIND		;reads keybord input 
	MOV C,A		;least significant hex digit
	LXI H,0A04H	
	MOV M,C		
	
	
	;Compare with K1, K2, K3 and light LED

	MOV A,B
	RLC
	RLC
	RLC
	RLC
	ADD C
	MOV B,A		;now B has the full number

	MVI C,40H		;C = K1 = 40H 
	MVI D,80H		;D = K2 = 80H 
	MVI E,C0H		;E = K3 = C0H

	INR C			;for <= and >= 
	INR D		
	INR E

	
	MOV A,B
	CMP C
	JC FIRST
	CMP D
	JC SECOND
	CMP E
	JC THIRD
	
	MVI A,08H
	CMA
	STA 3000H		;light 4th LED
	JMP LCD
FIRST:
	MVI A,01H
	CMA
	STA 3000H		;light 1st LED
	JMP LCD
SECOND:
	MVI A,02H
	CMA
	STA 3000H		;light 2nd LED
	JMP LCD	
THIRD:
	MVI A,04H
	CMA
	STA 3000H		;light 3rd LED
	JMP LCD

LCD:				;LCD output
	LXI D,0A00H		
	CALL STDM
	EI			;enable interrupts again
OUT:
	CALL DCD
	JMP OUT
END